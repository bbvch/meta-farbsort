From e940c06abd75dfa9cd862b9b0ed9a1dfac3947af Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Urs=20F=C3=A4ssler?= <urs.fassler@bbv.ch>
Date: Tue, 28 Jun 2016 14:51:47 +0200
Subject: [PATCH] simple logger service for rpmsg
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Urs FÃ¤ssler <urs.fassler@bbv.ch>
---
 drivers/rpmsg/Kconfig        |  8 ++++++
 drivers/rpmsg/Makefile       |  1 +
 drivers/rpmsg/rpmsg_logger.c | 68 ++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 77 insertions(+)
 create mode 100644 drivers/rpmsg/rpmsg_logger.c

diff --git a/drivers/rpmsg/Kconfig b/drivers/rpmsg/Kconfig
index 6a0c1fc..32b9a6c 100644
--- a/drivers/rpmsg/Kconfig
+++ b/drivers/rpmsg/Kconfig
@@ -35,4 +35,12 @@ config RPMSG_PRU
 
 	  If unsure, say N.
 
+config RPMSG_LOGGER
+	tristate "Logger service for rpmsg clients"
+	default n
+	depends on RPMSG
+	help
+	  Prints log output from a remote device.
+
+
 endmenu
diff --git a/drivers/rpmsg/Makefile b/drivers/rpmsg/Makefile
index ee475bb..3129940 100644
--- a/drivers/rpmsg/Makefile
+++ b/drivers/rpmsg/Makefile
@@ -4,3 +4,4 @@ obj-$(CONFIG_RPMSG_RPC)	+= rpmsg-rpc.o
 rpmsg-rpc-y		:= rpmsg_rpc.o rpmsg_rpc_sysfs.o rpmsg_rpc_dmabuf.o
 
 obj-$(CONFIG_RPMSG_PRU)	+= rpmsg_pru.o
+obj-$(CONFIG_RPMSG_LOGGER)	+= rpmsg_logger.o
diff --git a/drivers/rpmsg/rpmsg_logger.c b/drivers/rpmsg/rpmsg_logger.c
new file mode 100644
index 0000000..73bf89c
--- /dev/null
+++ b/drivers/rpmsg/rpmsg_logger.c
@@ -0,0 +1,68 @@
+/*
+ * Remote processor messaging - logger service
+ *
+ * Based on "Remote processor messaging - sample client driver" by
+ *   Ohad Ben-Cohen <ohad@wizery.com>
+ *   Brian Swetland <swetland@google.com>
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/rpmsg.h>
+
+static void rpmsg_logger_cb(struct rpmsg_channel *rpdev, void *data, int len,
+	void *priv, u32 src)
+{
+	dev_info(&rpdev->dev, "%s:%d: %s", rpdev->desc, src, (char *)data);
+}
+
+static int rpmsg_logger_probe(struct rpmsg_channel *rpdev)
+{
+	int ret;
+
+	ret = rpmsg_send(rpdev, NULL, 0);
+	if (ret) {
+		dev_err(&rpdev->dev, "rpmsg_send failed: %d\n", ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+static struct rpmsg_device_id rpmsg_logger_id_table[] = {
+	{ .name	= "logger" },
+	{ },
+};
+MODULE_DEVICE_TABLE(rpmsg, rpmsg_logger_id_table);
+
+static struct rpmsg_driver rpmsg_logger = {
+	.drv.name	= KBUILD_MODNAME,
+	.drv.owner	= THIS_MODULE,
+	.id_table	= rpmsg_logger_id_table,
+	.probe		= rpmsg_logger_probe,
+	.callback	= rpmsg_logger_cb,
+};
+
+static int __init rpmsg_logger_init(void)
+{
+	return register_rpmsg_driver(&rpmsg_logger);
+}
+module_init(rpmsg_logger_init);
+
+static void __exit rpmsg_logger_fini(void)
+{
+	unregister_rpmsg_driver(&rpmsg_logger);
+}
+module_exit(rpmsg_logger_fini);
+
+MODULE_DESCRIPTION("Remote processor logger driver");
+MODULE_LICENSE("GPL v2");
-- 
2.8.1

